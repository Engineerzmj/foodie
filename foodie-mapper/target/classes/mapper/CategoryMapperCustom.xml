<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zmj.mapper.CategoryMapperCustom" >

  <resultMap id="myCategoryVO" type="com.zmj.pojo.vo.CategoryVO">
    <result column="id" property="id"></result>
    <result column="name" property="name"></result>
    <result column="type" property="type"></result>
    <result column="fatherId" property="fatherId"></result>

    <!--
        collection标签: 用于定义关联的List集合类型的封装规则
        property: 对应三级分类的list属性名
        ofType: 集合的类型，三级分类的VO
    -->
    <collection property="subCatList" ofType="com.zmj.pojo.vo.SubCategoryVO">
      <result column="subId" property="subId"></result>
      <result column="subName" property="subName"></result>
      <result column="subType" property="subType"></result>
      <result column="subFatherId" property="subFatherId"></result>
    </collection>
  </resultMap>

  <resultMap id="myNewItemsVO" type="com.zmj.pojo.vo.NewItemsVO">
    <result column="rootCatId" property="rootCatId"></result>
    <result column="rootCatName" property="rootCatName"></result>
    <result column="slogan" property="slogan"></result>
    <result column="catImage" property="catImage"></result>
    <result column="bgColor" property="bgColor"></result>

    <!--
        collection标签: 用于定义关联的List集合类型的封装规则
        property: 对应三级分类的list属性名
        ofType: 集合的类型，三级分类的VO
    -->
    <collection property="simpleItemList" ofType="com.zmj.pojo.vo.SimpleItemVO">
      <result column="itemId" property="itemId"></result>
      <result column="itemName" property="itemName"></result>
      <result column="itemUrl" property="itemUrl"></result>
    </collection>
  </resultMap>

  <select id="getSubCatsList" resultMap="myCategoryVO" parameterType="int">
    SELECT
      f.id as id,
      f.name as name,
      f.type as type,
      f.father_id as fatherId,
      c.id as subId,
      c.name as subName,
      c.type as subType,
      c.father_id as subFatherId
    FROM
      category f
    LEFT JOIN
      category c
    ON
      f.id = c.father_id
    where
      f.father_id = #{rootCatId}
  </select>
  
  <select id="getSixNewItems" resultMap="myNewItemsVO" parameterType="Map">
        SELECT
        f.id as rootCatId,
        f.name as rootCatName,
        f.slogan as slogan,
        f.cat_image as catImage,
        f.bg_color as bgColor,
        i.id as itemId,
        i.item_name as itemName,
        i.created_time as createdTime,
        ii.url as itemUrl
    FROM
        category f
    LEFT JOIN
        items i
    ON
        f.id = i.root_cat_id
    LEFT JOIN
        items_img ii
    ON
        i.id = ii.item_id
    WHERE
        f.type = 1
    AND
        i.root_cat_id = #{paramsMap.rootCatId}
    AND
        ii.is_main = 1
    ORDER BY i.created_time DESC
    LIMIT 0,6
  </select>
</mapper>